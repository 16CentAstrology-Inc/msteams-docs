### YamlMime:Tutorial
title: Sending Proactive Message
metadata:
  title: Sending Proactive Message
  description: In this scenario, you'll learn how to send proactive messages
  audience: Developer
  level: Beginner
  ms.date: 06/21/2021
  ms.topic: interactive-tutorial
  ms.custom: mvc
items:
- durationInMinutes: 1
  content: |
    A proactive message is any message sent by a bot that is not in response to a request from a user. This can include messages, such as:
     - Welcome messages
     - Notifications
     - Scheduled messages

- title: Prerequisites
  durationInMinutes: 2
  content: |
    1.	Install [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/). 
        > [!NOTE]
        > Ensure you install the ASP.NET and web development or [.NET Core](https://dotnet.microsoft.com/download/dotnet/thank-you/sdk-3.1.410-windows-x64-installer) cross-platform development workload.
    1.	Install [Ngrok](https://ngrok.com/download).

- title: Setup local environment
  durationInMinutes: 3
  content: |
    1.	Download code from [Zip file](https://github.com/Wajeed-msft/SampleCodeZipFiles/raw/main/Send Proactive Messages.zip) for sample and extract the files.
    1.	Double-click `ProactiveBot.csproj` file from the extracted files. It opens the solution in Visual Studio.
    1.	Right-click the project and build the solution.
        ![Proactivebot project](~/assets/images/proactive-scenario/proactivebot-project.png)
        1. If you get Unable to find package error, perform the following steps:
        1.  Go to Tools > NuGet Package Manager > Package Manager Settings.
        1.	In the Options Window that appears, select NuGet Package Manager > Package Sources.
        2.	Select **Add**.
        3.	Type nuget.org in the Name and https://api.nuget.org/v3/index.json in the Source.
        4.	Select **Update** and **Ok**.
        5.	Rebuild your project
    1. Start the ngrok by running following command in terminal window where ngrok is downloaded ngrok.exe http 3978 --host-header=localhost
       <image>
    1. Copy the ngrok URL, we will refer this as ngrok base URL in next steps.

- title: Create and Install Teams App
  durationInMinutes: 5
  content: |
    1. Got to App Studio and import the manifest file present in the Zip File (AppManifest.zip) <add image>
    1. Create a Bot and update the Bot Id and Secret to the code
    1. Append /api/message to  Ngrok base URL and set it as endpoint address. Your URL would look like this: https://yourngrokdomain.ngrok.io/api/message
    1. Wait for few seconds for changes to take effect. Revisit Bots section by selecting Tabs section to force update if itâ€™s taking longer.
    1. Generate the App Password and copy it to appsettings.json file in your Visual Studio as value for MicrosoftAppPassword
    1. Copy the App Id to appsettings.json file as value for MicrosoftAppId
    1. Run the code by pressing F5 or clicking on play run button.

- title: Add Adaptive card to proactive message
  durationInMinutes: 10
  content: |
    1. Stop the debugging <image>
    1. Add Adaptive card package. <imAGE>
    1. Replace the existing BotCallback code present in NotifyController.cs to send Adaptive Card message. 
       private async Task BotCallback(ITurnContext turnContext, CancellationToken cancellationToken)
        {
                    AdaptiveCard card = new AdaptiveCard(new AdaptiveSchemaVersion(1, 0));

                    card.Body.Add(new AdaptiveTextBlock()
                    {
                        Text = "Proactive Hello",
                        Size = AdaptiveTextSize.ExtraLarge
                    });

                    card.Body.Add(new AdaptiveImage()
                    {
                        Url = new Uri("http://adaptivecards.io/content/cats/1.png")
                    });

                    Attachment attachment = new Attachment()
                    {
                        ContentType = AdaptiveCard.ContentType,
                        Content = card
                    };

                    await turnContext.SendActivityAsync(MessageFactory.Attachment(attachment));
        }
      
      Your code would look like this.
    1. Resolve the errors by adding required using for Adaptive Card. Hover over the squiggly red line and select using AdaptiveCards.
    1. Run the code by pressing F5.
    1. Go to Teams UI and uninstall the App. Reinstall the same app so that we get the conversationUpdate event.
    1. Navigate to http://localhost:3978/api/notify to get proactive hello in Adaptive Card.

- title: Complete challenge
  durationInMinutes: 3
  content: |
    Did you come up with something like this?

- content: |
    You've completed the scenario
    1.	You can send notification on daily basis / request for feedback from user on periodic basic
    2. Sending multiple notification may get throttled so remember to handle [throttling limits](https://docs.microsoft.com/en-us/microsoftteams/platform/bots/how-to/rate-limit)

