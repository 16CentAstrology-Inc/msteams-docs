### YamlMime:Tutorial
title: Microsoft Teams Connectors
metadata:
  title: Microsoft Teams Connectors
  description: In this tutorial, you'll learn to set up Connectors for Teams.
  audience: Developer
  level: Beginner
  ms.date: 01/15/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: webhooks-and-connectors/how-to/connectors-creating.md
  nextTutorialTitle: Read more on Webhooks and Connectors
  ms.custom: mvc
  ms.localizationpriority: none
items:
- durationInMinutes: 1
  content: |
    Microsoft Teams Connectors is Model-View-Controller (MVC) sample task management application generated using the [ASP.NET Web Application (.NET Framework)](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/outgoing-webhook/csharp) template. The majority of the code is related to either basic MVC configuration or Task management.
    
    **Types of main connector code**

      * ConnectorController.cs - Setup and Save actions.
      * TaskController.cs - Create and Update actions.

    **Key features of Meeting Token Generator**

      * Simulates a real task management system.
      * Allows users to create and view tasks.

    The content generates randomly and simulates the notification to be sent to Microsoft Teams channel using connector. 
    
    This step-by-step guide helps you to create and test a connector in Microsoft Teams. You'll see the following output:
       
    ![output image](~/assets/images/sbs-connector/mobile.png)
       

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure you install the following tools and set up your development environment:  

    * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
    * [ngrok](https://ngrok.com/download) latest version (only for devbox testing) or any equivalent tunneling solution
    * [Microsoft Teams](https://teams.microsoft.com/) with valid account

- title: Set up local environment
  durationInMinutes: 1
  content: |
   Clone `Microsoft-Teams-Samples` repository to your local GitHub:  

    1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
    1. Select **Code**.
    1. From the dropdown menu, select **Open with GitHub Desktop**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/clone repository.png" alt-text="cloning the repository" border="false":::

    1. Select **Clone**. 

- title: Enable developer preview
  durationInMinutes: 1
  content: |
   To enable developer preview in your desktop Teams client:

    1. Enable uploading of apps in the admin console of your tenant.
       1. Sign in to [Microsoft 365 admin center](https://admin.microsoft.com/Adminportal/Home?source=applauncher#/homepage#/) with your admin credentials.
       1. In the left panel, select **Show All**.
       1. Select **Teams**.
 
          ![Admin center menu](~/assets/images/meeting-token-generator/meeting-token-generator-admincenterimage.png)

       1. In the left panel, select **Teams apps**.
       
       1. Select **Setup Policies**.

          ![Setup policies](~/assets/images/meeting-token-generator/meeting-token-generator-setuppolicies.png) 

       1. Select **Global**.

          ![Toggle On](~/assets/images/meeting-token-generator/meeting-token-generator-turnonsideloadimage.png)

       1. Toggle **Upload custom apps** to **On** position.

          ![Toggle On](~/assets/images/meeting-token-generator/meeting-token-generator-toggleOn.png)

       1. Select **Save**. 
       
          Your test tenant can permit custom app sideloading.

          > [!NOTE]
          > The sideloading takes some time to become active.

    1. Go to **Microsoft Teams**.
    
    1. From the upper right corner of your Teams interface, select `...`.
    
    1. Select **About**. 
    
    1. Select **Developer preview**.

        ![Developer preview](~/assets/images/meeting-token-generator/meeting-token-generator-devpreview.png)
   
    1. Select **Switch to developer preview**.

        ![Switch to developer preview](~/assets/images/meeting-token-generator/meeting-token-generator-switchtodevpreview.png)

- title: Test connector in Microsoft Teams
  durationInMinutes: 5
  content: |
    To test the connector in Microsoft Teams:

    1. Navigate to **manifest.json** in cloned repository.

       ![Manifest location](~/assets/images/sbs-connector/manifestnavigation.png)

    1. Create a .zip with the following files that are present in the **Manifest** folder: 
       * manifest.json
       * icon-outline.png
       * icon-color.png

       ![Manifest zip](~/assets/images/sbs-connector/zip.png)
   
    1. Go to **Microsoft Teams**.
    1. In the left panel, select **Store** and select **Manage your apps**.

       ![Manage Apps](~/assets/images/sbs-connector/manageapp.png)

    1. Select **Upload a custom app**.
 
       ![Upload a custom app](~/assets/images/sbs-connector/upload.png)
      
    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

       ![manifest](~/assets/images/sbs-connector/open.png)

    1. Select **Add to a Team**.

       ![Add the app](~/assets/images/sbs-connector/addtoteam.png)

    1. Select the team or channel name from the list.

       ![select channel](~/assets/images/sbs-connector/channel.png)

    1. Select **Set up a connector**.

    1. In the left panel, search **Teams ToDo Notification connector** in search bar and select **Configure**.

       ![configure notification](~/assets/images/sbs-connector/configure.png)

    1. Select either **Created** or **Updated** on the registration page and select **Save**.

       ![select](~/assets/images/sbs-connector/create.png)

       After configuration, a notification in channel with link to the Task Manager application is displayed..

       ![notification message](~/assets/images/sbs-connector/notification.png)

    12. Go to **Task Manager Portal**.

       ![Task manager portal](~/assets/images/sbs-connector/taskportal.png)

    13. Select **Create New**.
       
       ![create new task](~/assets/images/sbs-connector/tasks.png)
       
    14. Enter the new task details.

       ![Task details](~/assets/images/sbs-connector/details.png)

    15. Select **Save**. 
      
       The MessageCard appears in registered Teams channel.

       ![Message](~/assets/images/sbs-connector/messagecard.png)

       You can try the actionable buttons available on the message card.

       ![Message](~/assets/images/sbs-connector/update.png)

- title: Configure your own connector
  durationInMinutes: 1
  content: | 
    To create your own connector:

    1. Navigate to **TeamsToDoAppConnector.sln** in cloned repository.

       ![sln path](~/assets/images/sbs-connector/sln.png)

    2. Use ngrok or Command prompt to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

        ```bash
        ngrok http -host-header=localhost 3978
        ``` 
       > [!TIP]
       > If you encounter **ERR_NGROK_4018**, follow the steps, as displayed in the command prompt to sign-up and authenticate ngrok. Then run the `ngrok http -host-header=localhost 3978` command.

       ![ngrok path](~/assets/images/sbs-connector/ngrok.png)

    3. Go to [Connector Developer Portal](https://outlook.office.com/connectors/Home/Login#!/show/133adfba-f620-475e-a192-19e9f10c476c).
    4. Select connector.
     
       ![Add new connector](~/assets/images/sbs-connector/connector.png)
      
    5. Register a new connector:

       * Enter all the basic details such as name, logo, description for the new connector.
       * Enter `Configuration page for your connector` as **https://[BASE_URI]/connector/setup**.
       * Enter `Valid Domains` as **https Base URL**.
       * Enable the action on connector card by selecting **Yes**.
       * Enter `Action URL` as **https://[BASE_URI]/Task/Update**.
       * Select Save. 

      ![Basic details](~/assets/images/sbs-connector/basicdetails.png)

       You have successfully registered a new connector. The window appears with registered connector ID.

         ![output screen](~/assets/images/sbs-connector/output.png) 
      
       > [!TIP]
       > Save the Connector ID for future reference.

    6. Navigate to **Web.config file** in cloned repository.

       ![Navigation path](~/assets/images/sbs-connector/webnavigation.png) 

    7. Open it in Visual studio.

    8. Replace the `configuration.appSettings.Base_Uri` variable to the **ngrok https forwarding url**.
       
       ![Settings manifest](~/assets/images/sbs-connector/manifest.png) 

    9. Press F5 to run the project.
    10. Sideload your app package.

        ![Sideloading](~/assets/images/sbs-connector/apppackage.png) 

    11. Test your new connector(link to heading).

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    ![Complete output](~/assets/images/sbs-connector/finaloutput.png)

- content: |
    You've completed the tutorial to get started with a **Microsoft Teams Connectors**!


