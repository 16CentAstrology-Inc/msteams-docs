### YamlMime:Tutorial
title: Microsoft Teams Connectors
metadata:
  title: Microsoft Teams Connectors
  description: In this tutorial, you'll learn to set up Connectors for Teams.
  audience: Developer
  level: Beginner
  ms.date: 01/15/2022
  ms.topic: interactive-tutorial
  nextTutorialHref: apps-in-teams-meetings/enable-and-configure-your-app-for-teams-meetings.md
  nextTutorialTitle: Read more on Webhooks and Connectors
  ms.custom: mvc
  ms.localizationpriority: none
items:
- durationInMinutes: 1
  content: |
    Microsoft Teams Connectors is an MVC sample task management application generated using the [ASP.NET Web Application (.NET Framework)](https://github.com/OfficeDev/Microsoft-Teams-Samples/tree/main/samples/outgoing-webhook/csharp) template. The majority of the code is related to either basic MVC configuration or Task management.
    
    The main connector code is found here:
      * ConnectorController.cs - Setup & Save actions
      * TaskController.cs - Create & Update actions

    The following are the functions of Microsoft Teams Connectors:
      * Simulates a real task management system
      * Allows users to create and view tasks

    The content is randomly generated to simulate how notification can be sent into Microsoft Teams channel using connector. For more information on developing apps for Microsoft Teams,see [Microsoft Teams developer documentation](/microsoftteams/platform/overview).
    
     [Place holder for image]

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure you install the following tools and set up your development environment:  

    * [Visual Studio 2019](https://visualstudio.microsoft.com/downloads/)
    * [ngrok](https://ngrok.com/download) latest version (only for devbox testing) or any equivalent tunneling solution
    * [Microsoft Teams](https://teams.microsoft.com/) with valid account

    > [!NOTE]
    > Some features in the sample require that you using Public Developer Preview mode in Microsoft Teams.

- title: Set up local environment
  durationInMinutes: 1
  content: |
   Clone `Microsoft-Teams-Samples` repository to your local GitHub:  

    1. Open [Microsoft Teams Samples](https://github.com/OfficeDev/Microsoft-Teams-Samples).
    1. Select **Code**.
    1. From the dropdown menu, select **Open with GitHub Desktop**.

       :::image type="content" source="../msteams-platform/assets/images/sbs-meetings-stage-view/clone repository.png" alt-text="cloning the repository" border="false":::

    1. Select **Clone**. 

- title: To test connector in Microsoft Teams
  durationInMinutes: 5
  content: |
    Perform the following steps to test the connector in Microsoft Teams:
    1. Navigate to **manifest.json** in cloned repository.

       ![Manifest location](~/assets/images/sbs-connector/manifestnavigation.png)

    1. Create a .zip with the following files that are present in the **Manifest** folder: 
       * manifest.json
       * icon-outline.png
       * icon-color.png

       ![Manifest zip](~/assets/images/sbs-connector/zip.png)
   
    1. Go to Microsoft Teams app.
    1. Select **Apps** and select **Manage apps**.

       ![Manage Apps](~/assets/images/sbs-connector/manage apps.png)

    1. In the pop-up that opens, **select Upload a custom app**
 
       ![Upload a custom app](~/assets/images/sbs-connector/upload.png)
      
    1. Select **Open** to upload the .zip file that you created in the **Manifest** folder.

       ![manifest](~/assets/images/sbs-connector/open.png)

    1. Select **Add to a Team**.

       ![Add the app](~/assets/images/sbs-connector/add to team.png)

    1. Select the team or channel name from the list.

       ![select channel](~/assets/images/sbs-connector/channel.png)

    1. Configure the **Teams ToDo Notification connector**.

       ![configure notification](~/assets/images/sbs-connector/configure.png)

    1. Select either **Create** or **Update** on the registration page and select save.

       ![select](~/assets/images/sbs-connector/create.png)

    1. Once the connector is configured, you will get a notification in channel with link to the Task Manager application.

       ![notification message](~/assets/images/sbs-connector/notification.png)

    1. Go to Task Manager portal.

       ![Task manager portal](~/assets/images/sbs-connector/taskportal.png)

    1. select **Create New**.
       
       ![create new task](~/assets/images/sbs-connector/task.png)
       
    1. Enter the task details.

       ![Task details](~/assets/images/sbs-connector/details.png)

    1. Select save.
    1. You will see the MessageCard in the registered Teams channel as shown below:

       ![Message](~/assets/images/sbs-connector/messagecard.png)

    1. You can try the actionable buttons available on the message card.

       ![Message](~/assets/images/sbs-connector/update.png)

- title: Configure your own connector
  durationInMinutes: 1
  content: |
    
    To create your own connector:

    1. Navigate to **TeamsToDoAppConnector.sln** in cloned repository.

       ![sln path](~/assets/images/sbs-connector/sln.png)

    1. Use ngrok or Command prompt to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

     ```bash
     ngrok http -host-header=localhost 3978
     ``` 
       > [!TIP]
       > If you encounter **ERR_NGROK_4018**, follow the steps, as displayed in the command prompt to sign-up and authenticate ngrok. Then run the `ngrok http -host-header=localhost 3978` command.

       ![ngrok path](~/assets/images/sbs-connector/ngrok.png)

    1. Go to [Connector Developer Portal](https://outlook.office.com/connectors/Home/Login#!/show/133adfba-f620-475e-a192-19e9f10c476c).
    1. Select connector.
     
       ![Add new connector](~/assets/images/sbs-connector/connector.png)
      
    1. Register a new connector:

       1. Fill in all the basic details such as name, logo, descriptions etc. for the new connector.
          
          * Enter `Configuration page for your connector` as **https://[BASE_URI]/connector/setup**.
          * Enter `Valid Domains` as **https Base URL**.

       1. Enable the action on connector card by selecting Yes.

          * Enter `Action URL` as **https://[BASE_URI]/Task/Update**.

       1. Select save. 

          ![Basic details](~/assets/images/sbs-connector/basicdetails.png)

       After completion of registration, you will see the following screen:

         ![output screen](~/assets/images/sbs-connector/output.png) 

    1. Navigate to **Web.config file** in cloned repository.

       ![Navigation path](~/assets/images/sbs-connector/webnavigation.png) 

    1. Open it in Visual studio.

    1. Replace the `configuration.appSettings.Base_Uri` variable to the **ngrok https forwarding url**.
       
       ![Settings manifest](~/assets/images/sbs-connector/manifest.png) 

    1. Select F5.
    1. Sideload your app package.

      ![Sideloading](~/assets/images/sbs-connector/apppackage.png) 

    1. Test your new connector(link to heading).

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

       [Place holder for image]

- content: |
    You've completed the tutorial to get started with a **Microsoft Teams Connectors**!


