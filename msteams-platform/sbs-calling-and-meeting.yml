### YamlMime:Tutorial
title: Teams calling and meeting
metadata:
  title: Teams Bot with calling and meeting
  description: In this tutorial, you'll learn to set up calling and meeting in a bot for Teams.
  audience: Developer
  level: Beginner
  ms.date: 12/29/2021
  ms.topic: interactive-tutorial
  nextTutorialHref: bots/how-to/authentication/auth-aad-sso-bots.md
  nextTutorialTitle: Read more on bot authentication
  ms.custom: mvc
  ms.localizationpriority: none
items:
- durationInMinutes: 1
  content: |
    Calling and Meeting Bot provides basic functionality like create a call, join a call, transfer/redirect a call, join a scheduled meeting and invite the participants by integrating cloud communications API Graph API.
    
    Bots can interact with Teams calls and meetings using real-time voice, video, and screen sharing. With Microsoft Graph APIs for calls and online meetings, Teams apps can now interact with users using voice and video to enhance the experience. These APIs allow you to add the following new features:

    * Interactive voice response (IVR).
    * Call control.
    * Access to real-time audio and video streams, including desktop and app sharing.

    To use these Graph APIs in a Teams app, you create a bot and specify some additional information and permissions.
    This step-by-step guide helps you to create a bot with calling and meeting functionality. You'll see the following output:

    ![Mobile signed in to bot](~/assets/images/bots/sbs-desktop-mobile.png)

- title: Prerequisites
  durationInMinutes: 1
  content: |
    Ensure that you install the following tools and set up your development environment:  

    * [Office 365 tenant](https://developer.microsoft.com/en-us/microsoft-365/dev-program).
    * [ngrok](https://ngrok.com/) or equivalent tunnelling solution.
    * Visual Studio Code.
    * [.NET Core SDK](https://dotnet.microsoft.com/en-us/download) version 3.1
    * [Microsoft 365 developer account](https://docs.microsoft.com/en-us/microsoftteams/platform/concepts/build-and-test/prepare-your-o365-tenant) or access to Teams account with appropriate permissions to install an app.

- title: Setup Calling and Meeting Bot
  durationInMinutes: 5
  content: |
    Add and register an application using App registration in the Azure portal for your app to integrate with the Microsoft identity platform and call Microsoft Graph. Perform the following steps:

    1. Use ngrok to create a tunnel to your web server's endpoints.
    1. Create Azure Bot resource to register bot with Azure Bot Service.
    1. Create client secret that enables SSO authentication of the bot.
    1. Add API permissions for downstream calls.
    1. Create Bot channel registration in Azure account.
    1. Add Microsoft Teams channel to deploy the bot to a Teams channel.
    1. Add messaging endpoint to the ngrok tunnel you created.

    Use ngrok to create a tunnel to your locally running web server's publicly available HTTPS endpoints. Run the following command in ngrok:

        ```bash
        ngrok http -host-header=rewrite 3978
        ```
    **Register an App in Azure**

    1. Sign in to the [Azure portal](https://portal.azure.com/) using your personal Microsoft account.

    1. Select the **Azure Active Directory** service, and select **App registrations** and then select **New registration**.
    
        ![Azure active directory](~/assets/images/calls-and-meetings/azure-active-directory.png)
    
    1. **Register an application** page opens. Enter your application's registration information.
    1. Enter a meaningful application **Name** that will be displayed to users of the app.
    1. In **Supported account types**, select the accounts you would like your application to support.
    1. In Redirect URI (optional) field, select the type of app, Web or Public client(mobile & desktop), and then enter the redirect URI for your application.

        > [!NOTE]
        > For web applications, provide the base URI as `http://localhost:31544`. For public client applications, provide the URI used by Azure AD to return token responses as `myapp://auth`.

    1. Select **Register**.

        ![Register an app](~/assets/images/calls-and-meetings/reg-app.png)

    **To create client secret**

    1. In **Settings**, select **Configuration**. Save the **Microsoft App ID** (Application client ID) for future reference.
    
        ![Microsoft App ID](~/assets/images/calls-and-meetings/microsoft-app-id.png)
    
    1. Adjacent to **Microsoft App ID**, select **Manage**.

        ![Manage](~/assets/images/calls-and-meetings/manage.png)

    1. In **Certificates & secrets** section, select **Client secrets** and select **New client secret**. The **Add a client secret** window appears.  

    1. Enter **Description** and select **Add**.
 
        ![Add Client secret](~/assets/images/calls-and-meetings/add-client.png)

    1. In the **Value** column, select **Copy to clipboard** and save the client secret ID for future reference.

        ![Value](~/assets/images/calls-and-meetings/client-secret.png)

    1. Create a policy for a demo tenant user for creating the online meeting using the following powershell script.

        (Add powershell script)

    1. Add `PolicyName`, `azure-client-id`, `policy-description`, and `object-id` in powershell script.
    1. Run Windows Powershell PSI as an administrator and execute the script.

    **To add API permissions for downstream calls**

    1. Select **API permissions** from the left pane.
    1. Select **Add a permission**. **Request API permissions** window appears.
    1. Select **Microsoft APIs** and select **Microsoft Graph**.
    1. Select **Application permissions** and then select permissions.
    1. Add following Graph API Applications permissions to your Azure App and grant admin consent.
        `Calls.AccessMedia.All`
        `Calls.Initiate.All`
        `Calls.InitiateGroupCall.All`
        `Calls.JoinGroupCall.All`
        `Calls.JoinGroupCallAsGuest.All`
        `OnlineMeetings.ReadWrite.All`
    1. Select **Add permissions**.

        ![Add API permissions](~/assets/images/calls-and-meetings/add-api-permissions.png)

    **Create Bot Channel Registeration in Azure account**

    1. Open [Azure portal](https://portal.azure.com/).
    1. Select **Create a resource**.
    1. Search for **Azure Bot** in the search box.
    1. Select **Azure Bot**.

        ![Azure bot card](~/assets/images/calls-and-meetings/azure-bot-homepage.png)

    1. Select **Create**.
    1. Enter bot handle name in **Bot handle** field.
    1. Select your **Subscription** from the dropdown list.
    1. Select your **Resource group** from the dropdown list.

        To create a new resource group, select **Create new**, enter resource name, select **OK**, and select required location from **New resource group location** dropdown list.

        ![Create Azure Bot](~/assets/images/calls-and-meetings/create-azure-bot.png)

    1. Select **Type of App** as **Multi Tenant** for **Microsoft App ID**.

        > [!NOTE]
        > In **Creation type** of Microsoft App ID section, **Create new Microsoft App ID** is already selected to create a new bot. You can also select **Use existing app registration**, if you have already registered a bot. Enter Microsoft App ID in **Existing app id** field, and enter value in **Existing app password** field.

    1. Select **Use existing app registration** and enter **App ID** and **App secret** of your azure app registered in demo tenant.
    1. Select **Review + create**.

        ![Multi tenant](~/assets/images/calls-and-meetings/review-create.png)

    1. If the validation passes, select **Create**.

       It takes a few moments for your bot service to be provisioned.

        ![Validation](~/assets/images/calls-and-meetings/validation.png)

    1. Select **Go to resource**. The bot and the related resources are listed in the resource group.

        Now your Azure bot has been created.

        ![Go to resource](~/assets/images/calls-and-meetings/go-to-resource.png)

    **To add the Microsoft Teams channel**

    1. Go to **Home**.
    1. Open your bot, which is listed in the **Recent resources** section.
    1. Select **Channels** in the left pane and select **Microsoft Teams** <img src="~/assets/images/bots/teamsicon.png" alt="Teams icon" width="20"/> from the list of available channels.    
        
        ![Channels Teams](~/assets/images/calls-and-meetings/channels-teams.png)
    
    1. Select the checkbox to accept the terms of service and select **Agree**.

        ![Terms of service](~/assets/images/calls-and-meetings/terms-of-service.png)

    1. Select **Save**.
    1. Select **Microsoft Teams** and select **Calling** tab on Teams channel page.

        ![Configure Teams](~/assets/images/calls-and-meetings/configure-teams.png)
    
    1. Select **Enable calling**, and then update **Webhook** with your HTTPS ngrok url (https://yourNgrok/api/callback) and add `/api/callback` at the end.

        ![Enable calling](~/assets/images/calls-and-meetings/enable-calling.png)

    1. Select **Save**.

    **To add messaging endpoint**

    1. Go to **Home** page and select **Configuration** under **Settings** from the left pane.
    1. Go to ngrok.
    1. Copy the HTTPS URL (https to io) as shown in the following image:
        
        ![Ngrok](~/assets/images/calls-and-meetings/ngrok.png)

    1. In **Messaging endpoint**, add the HTTPS URL available from ngrok and at the end of the URL add **/api/messages**.
        
        ![Messaging endpoint](~/assets/images/calls-and-meetings/messaging-endpoint.png)

    1. Select **Apply**.

        You have successfully set up a bot in Azure Bot Service and now you need to set up bot service connection.

- title: Update and create Teams App Package
  durationInMinutes: 1
  content: |
    Configure the bot sample to understand how to authenticate conversational bot in Microsoft Teams and create the Teams App Package and upload it to the organisation.

    **Update appsettings for calling Bot**

    1. Go to the repo https://github.com/OfficeDev/Microsoft-Teams-Samples.git.
    1. Select **Code** and select the dropdown.
    1. Select **Download ZIP**.

        ![Repo download](~/assets/images/calls-and-meetings/repo-download.png)

    1. Ensure to note the Path of the repository that is downloaded.
    1. In the File Explorer, Select the **Project**.
    1. Go to **Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** folder.
    1. Open the **appsettings.json** file in Visual Studio Code.
    1. Update the **appsettings.json** configuration for the bot to use the `MicrosoftAppId`, `MicrosoftAppPassword`, `AppId` and `AppSecret` with your client_id and client_secret registered in demo tenant.
    1. Update `BotBaseUrl` with your `ngrok` URL.
    1. Update `UserId` and `DisplayName` of the users from where you want to initiate the call and to whom you want to redirect or transfer the call.

        > [!NOTE]
        > You can obtain the `MicrosoftAppId` from the bot's Configuration page. The `MicrosoftAppPassword` is the Value for client secret ID that you saved previously.

        ![Appsettings Json](~/assets/images/calls-and-meetings/appsettings.png)

    1. Select **Save**.

    **To update manifest**

    1. In the File Explorer, go to **Microsoft-Teams-Samples-main** > **samples** > **bot-calling-meeting** > **csharp** > **Manifest** folder.
    1. Open the **manifest.json** file in Visual Studio Code.
    1. In the **manifest.json** file, find **{contentBotId}** and add your Microsoft App ID and save.

        ![Manifest](~/assets/images/calls-and-meetings/manifest.png)

    1. Zip the contents of the **Manifest** folder to create **manifest.zip**.
    
        > [!NOTE]
        > The **manifest.zip** should not contain any additional folders in it. It should have **manifest json** source file, **color** icon, and **outline** icon inside the zip folder.
    
    1. Go to Teams.
    1. To upload **manifest.zip**, select **Store > Manage your apps > Publish an app > Upload a custom app** and open **manifest.zip** from the repo folder in File explorer.
    1. Select **Add** to install Calling Bot in Teams.

        ![Add Output](~/assets/images/calls-and-meetings/output.png)

        You can interact with this bot by sending it a message.

    1. Send a message to the bot.

        (Image desktop/mobile)

- title: Interaction with the Calling and Meeting Bot
  durationInMinutes: 2
  content: |
    Bot allows you to access services and content in a dedicated space within a channel or in a chat.

    Follow the steps to use the bot:

    1. In the left pane of the Teams, select the ellipses ●●● and choose your app from the list.
    1. Bot will throw welcome Text with Adaptive Card as shown below.

        (image)

    1. You can ask Bot to Create a call or Transfer a call.

        (image)

    1. You can ask Bot to schedule a Meeting and invite the participants.

        (Image)

- title: Complete challenge
  durationInMinutes: 1
  content: |
    Did you come up with something like this?

    (image)
    
- content: |
    You've completed the tutorial to get started with bot calling and meeting app for Microsoft Teams.
